$(document).ready(function() {




    var tca = (function(e, t, n) {
        function p(e) {
            var t = "";
            if (e) {

                t += "&x=" + e.x;
                t += "&y=" + e.y;
                t += "&w=" + e.w;
                t += "&h=" + e.h;
                t += "&l=" + e.l;
                t += "&d=" + e.d;
                t += "&t=" + e.t;
                t += "&p=" + e.p;
                t += "&lag=" + e.lag;
                t += "&r=" + encodeURI(e.r);
                t += "&text=" + e.text;
                t += "&rand=" + Math.random() * 1e12
            }
           
            return t
        }
        var r = function(r, i, srcElement) {
            if (c(r)) {
                return false
            }
            a = r.timeStamp;
            var s = u();
            x = 0;
            var f = i.text();
            f = f.replace(/\s{2,}/g, " ");
            if (f.length > 50) {
                f = f.substring(0, 50)
            }

            var xpathTree = getElementTreeXPath(srcElement.srcElement);
            var finalXpath = getUniqueXPath(xpathTree);
            //console.log("Final Xpath  = " + finalXpath); 
            var p = {
                x: r.pageX || 0,
                y: r.pageY || 0,
                w: n(e).width(),
                h: n(e).height(),
                l: n(t).height(),
                d: e.location.href,
                t: s,
                p: encodeURIComponent(finalXpath),
                lag: s - l,
                r: "",
                text: (_valueAtXPath(finalXpath))
            };
            h(p);
            d(p)
        };
        var i = 0;
        var s = function(e) {
            var t = e;
            var n = 0;
            if (t.previousSibling) {
                n = 1;
                var r = t.previousSibling;
                do {
                    if (r.nodeType == 1 && r.nodeName == t.nodeName) {
                        n++
                    }
                    r = r.previousSibling
                } while (r);
                if (n == 1) {
                    n = null
                }
            } else if (t.nextSibling) {
                var r = t.nextSibling;
                do {
                    if (r.nodeType == 1 && r.nodeName == t.nodeName) {
                        n = 1;
                        r = null
                    } else {
                        var n = null;
                        r = r.previousSibling
                    }
                } while (r)
            }
            if (n) {
                return "(" + n + ")"
            } else {
                return ""
            }
        };

        function _valueAtXPath(STR_XPATH) {
            var xresult = document.evaluate(STR_XPATH, document, null, XPathResult.ANY_TYPE, null);
            var xnodes = [];
            var xres;
            while (xres = xresult.iterateNext()) {
                xnodes.push(xres);
            }

            return $(xnodes).text();
        }

        function _xCount(STR_XPATH) {
            var xresult = document.evaluate(STR_XPATH, document, null, XPathResult.ANY_TYPE, null);
            var xnodes = [];
            var xres;
            while (xres = xresult.iterateNext()) {
                xnodes.push(xres);
            }

            return xnodes.length;
        }

        createXpath = function(elm) {
            var xpath = "";
            var bracketTxt = "";
            xpath += elm.tagName;
            if (elm.id != "" || elm.name != "" || elm.clazz != "") {
                xpath += "[";
                var addAnd = false;
                if (elm.id != "") {
                    xpath += "@id='" + elm.id + "'";
                    addAnd = true;
                }
                if (elm.name != "") {
                    if (addAnd) {
                        xpath += " and ";
                    }
                    xpath += "@name='" + elm.name + "'";
                    addAnd = true;
                }
                if (elm.clazz != "") {
                    if (addAnd) {
                        xpath += " and ";
                    }
                    xpath += "@class='" + elm.clazz + "'";
                    addAnd = true;
                }
                xpath += "]";
            }
            var retval = xpath;
            var count = _xCount("//" + xpath);
            //if(count > 1 && elm.pathIndex != ""){
            //         xpath += "["+_xCount("//"+xpath)+"]";
            //}
            count = _xCount("(//" + retval + ")");
            if (addAnd && count > 1) {
                for (var itr = 1; itr <= count; itr++) {
                    var byxpath = document.evaluate("(//" + retval + ")[" + itr + "]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
                    if (byxpath == elm.self && _xCount("(//" + retval + ")[" + itr + "]") == 1) {
                        xpath = "(//" + retval + ")[" + itr + "]";

                        break;
                    }
                }
            }
            return xpath;
        }



        getUniqueXPath = function(retList) {
            var xpath = "";
            var hasChild = false;
            for (var itr = 0; itr < retList.length; itr++) {
                var x = retList[itr];
                var curElXpath = createXpath(x);
                if (xpath == "") {
                    xpath = curElXpath;
                } else {

                    xpath = curElXpath + "/" + xpath;
                }

                var retval = ((xpath && xpath.indexOf("(") == 0) ? "" : "//") + xpath;
                if (_xCount(retval) == 1) {
                    //console.log("xpath is = " + retval);
                    //console.log("xpath value = " + _valueAtXPath(retval));
                    return retval;
                } else {
                    // count > 1 
                    //set this count relative to parentNode
                    if (itr < retList.length) {
                        var parentNode = retList[itr + 1];
                        var xresult = document.evaluate("//" + parentNode.tagName + "//" + xpath, document, null, 0, null);
                        var xres;
                        var counter = 0;
                        while (xres = xresult.iterateNext()) {
                            if (xres.parentNode == parentNode.self) {
                                if (xres.tagName.toUpperCase() == x.self.tagName.toUpperCase()) {
                                    counter++;
                                }
                                if (xres == x.self) {
                                    break;
                                }
                            }
                        }
                        xpath = xpath + "[" + counter + "]";
                    }
                }
                hasChild = true;
            }
        }


        getElementTreeXPath = function(element) {
            var retList = [];
            var paths = [];

            for (; element && element.nodeType == 1; element = element.parentNode) {
                var index = 0;
                for (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling) {
                    if (sibling.nodeType == Node.DOCUMENT_TYPE_NODE)
                        continue;

                    if (sibling.nodeName == element.nodeName)
                        ++index;
                }
                var obj = {
                    tagName: element.nodeName.toLowerCase(),
                    pathIndex: (index ? (index + 1) : ""),
                    clazz: (element.getAttribute("class") ? element.getAttribute("class") : ""),
                    name: (element.getAttribute("name") ? element.getAttribute("name") : ""),
                    id: (element.getAttribute("id") ? element.getAttribute("id") : ""),
                    self: element
                }
                retList.push(obj);
            }
            return retList;
        };
        var o = function(e) {


            i++;
            if (i > 1e3) {
                return ""
            }
            if (e && typeof e.className !== "undefined") {
                var t = e.className;
                var n = t.replace(/ /g, "|");
                var r = e.parentNode;
                var u = e.id;
                n = n + s(e);
                if (typeof u !== "undefined" && u && u.length) {
                    n += "[" + u + "]"
                }
                var a = e.tagName;
                n = a + ":" + n;
                if (r) {
                    if (n.length) {
                        return o(r) + ">" + n.trim()
                    } else {
                        return o(r)
                    }
                }
                return n.trim()
            }
            return ""
        };
        var u = function() {
            var e = new Date;
            return e.getTime() / 1e3
        };
        var a = 0;
        var f = new Date;
        var l = f.getTime() / 1e3;
        var c = function(e) {
            if (a === e.timeStamp) {
                return true
            }
            return false
        };
        var h = function(e) {
            if (console) {}
        };
        var d = function(e) {
            var t = new Image;
            t.src = "http://"+document.domain+"/assets/js/global/cheetah/b.gif?_=1.0" + p(e);

            //       console.log("url => " + t.src);
        };
        setTimeout(function() {
            var v = window.jQuery("div, a, span, button, img, li, textarea, input");
            v.on("click", function(e) {
                try {
                    r(e, n(this),event);
                } catch (e) {}
            });
        }, 500);
        var m = {
            x: 0,
            y: 0,
            w: n(e).width(),
            h: n(e).height(),
            l: n(t).height(),
            d: e.location.href,
            t: u(),
            p: "",
            lag: 0,
            r: t.referrer || "",
            text: t.title
        };
        d(m);
        return this
    })(window, document, window.jQuery);


});
